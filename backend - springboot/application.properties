# Spring Boot Application Configuration
# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Port on which the application will run
server.port=8080

# Application name (appears in logs and monitoring)
spring.application.name=notes-app

# =============================================================================
# DATABASE CONFIGURATION (H2 - In-Memory Database for Development)
# =============================================================================
# H2 database URL - using in-memory database for easy development
# Data will be lost when application stops
spring.datasource.url=jdbc:h2:mem:testdb

# H2 database driver
spring.datasource.driverClassName=org.h2.Driver

# Database credentials (default for H2)
spring.datasource.username=sa
spring.datasource.password=

# =============================================================================
# JPA/HIBERNATE CONFIGURATION
# =============================================================================
# Hibernate dialect for H2 database
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# DDL mode - creates tables automatically on startup, drops on shutdown
# Options: create, create-drop, update, validate, none
spring.jpa.hibernate.ddl-auto=create-drop

# Show SQL queries in console (useful for debugging)
spring.jpa.show-sql=true

# Format SQL queries for better readability
spring.jpa.properties.hibernate.format_sql=true

# =============================================================================
# H2 CONSOLE CONFIGURATION (Development Only)
# =============================================================================
# Enable H2 web console for database management
# Access at: http://localhost:8080/h2-console
spring.h2.console.enabled=true

# Custom path for H2 console (optional)
spring.h2.console.path=/h2-console

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Set logging level for the application
logging.level.com.example.notes=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG

# =============================================================================
# PRODUCTION DATABASE CONFIGURATION (PostgreSQL)
# =============================================================================
# configure these when deploying to production:

# PostgreSQL database configuration
# spring.datasource.url=jdbc:postgresql://localhost:5432/notesdb
# spring.datasource.username=${DB_USERNAME:your_username}
# spring.datasource.password=${DB_PASSWORD:your_password}
# spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate configuration for PostgreSQL
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.hibernate.ddl-auto=update

# =============================================================================
# CORS CONFIGURATION (Alternative to @CrossOrigin annotation)
# =============================================================================
# You can configure CORS globally here instead of using @CrossOrigin
# spring.web.cors.allowed-origins=http://localhost:3000,http://127.0.0.1:3000
# spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# spring.web.cors.allowed-headers=*
# spring.web.cors.allow-credentials=true

# =============================================================================
# ACTUATOR CONFIGURATION (Health Checks and Monitoring)
# =============================================================================
# Uncomment to enable Spring Boot Actuator for health checks:
# management.endpoints.web.exposure.include=health,info
# management.endpoint.health.show-details=always
